{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fifim\\\\Desktop\\\\Health\\\\health-horizon\\\\src\\\\pages\\\\CadastrarExame.js\",\n  _s = $RefreshSig$();\n// src/pages/CadastrarExame.js\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CadastrarExame() {\n  _s();\n  const [nomeExame, setNomeExame] = useState('');\n  const [dataRealizacao, setDataRealizacao] = useState('');\n  const [resultado, setResultado] = useState('');\n  const [pacientes, setPacientes] = useState([]);\n  const [pacienteSelecionado, setPacienteSelecionado] = useState('');\n  useEffect(() => {\n    // Simulação de busca de pacientes consultados por esse médico\n    const fetchPacientes = async () => {\n      // Você deve substituir essa lógica pela chamada ao seu backend\n      const pacientesData = [{\n        id: 1,\n        nome: 'Paciente A'\n      }, {\n        id: 2,\n        nome: 'Paciente B'\n      }, {\n        id: 3,\n        nome: 'Paciente C'\n      }];\n      setPacientes(pacientesData);\n    };\n    fetchPacientes();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Aqui você pode implementar a lógica para cadastrar o exame\n    console.log({\n      nomeExame,\n      dataRealizacao,\n      resultado,\n      pacienteSelecionado\n    });\n    // Limpar os campos após o envio\n    setNomeExame('');\n    setDataRealizacao('');\n    setResultado('');\n    setPacienteSelecionado('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cadastrar Exame\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formPaciente\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Paciente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: pacienteSelecionado,\n          onChange: e => setPacienteSelecionado(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione um paciente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), pacientes.map(paciente => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: paciente.id,\n            children: paciente.nome\n          }, paciente.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formNomeExame\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome do Exame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Digite o nome do exame\",\n          value: nomeExame,\n          onChange: e => setNomeExame(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formDataRealizacao\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Data de Realiza\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: dataRealizacao,\n          onChange: e => setDataRealizacao(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formResultado\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Resultado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Digite o resultado do exame\",\n          value: resultado,\n          onChange: e => setResultado(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Cadastrar Exame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(CadastrarExame, \"LTRzjfjpGkS3s/Fj1whKlx2oeAs=\");\n_c = CadastrarExame;\nexport default CadastrarExame;\nvar _c;\n$RefreshReg$(_c, \"CadastrarExame\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","jsxDEV","_jsxDEV","CadastrarExame","_s","nomeExame","setNomeExame","dataRealizacao","setDataRealizacao","resultado","setResultado","pacientes","setPacientes","pacienteSelecionado","setPacienteSelecionado","fetchPacientes","pacientesData","id","nome","handleSubmit","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","required","map","paciente","type","placeholder","variant","_c","$RefreshReg$"],"sources":["C:/Users/fifim/Desktop/Health/health-horizon/src/pages/CadastrarExame.js"],"sourcesContent":["// src/pages/CadastrarExame.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction CadastrarExame() {\r\n    const [nomeExame, setNomeExame] = useState('');\r\n    const [dataRealizacao, setDataRealizacao] = useState('');\r\n    const [resultado, setResultado] = useState('');\r\n    const [pacientes, setPacientes] = useState([]);\r\n    const [pacienteSelecionado, setPacienteSelecionado] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Simulação de busca de pacientes consultados por esse médico\r\n        const fetchPacientes = async () => {\r\n            // Você deve substituir essa lógica pela chamada ao seu backend\r\n            const pacientesData = [\r\n                { id: 1, nome: 'Paciente A' },\r\n                { id: 2, nome: 'Paciente B' },\r\n                { id: 3, nome: 'Paciente C' },\r\n            ];\r\n            setPacientes(pacientesData);\r\n        };\r\n\r\n        fetchPacientes();\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Aqui você pode implementar a lógica para cadastrar o exame\r\n        console.log({ nomeExame, dataRealizacao, resultado, pacienteSelecionado });\r\n        // Limpar os campos após o envio\r\n        setNomeExame('');\r\n        setDataRealizacao('');\r\n        setResultado('');\r\n        setPacienteSelecionado('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Cadastrar Exame</h3>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formPaciente\">\r\n                    <Form.Label>Paciente</Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        value={pacienteSelecionado}\r\n                        onChange={(e) => setPacienteSelecionado(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Selecione um paciente</option>\r\n                        {pacientes.map((paciente) => (\r\n                            <option key={paciente.id} value={paciente.id}>\r\n                                {paciente.nome}\r\n                            </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formNomeExame\">\r\n                    <Form.Label>Nome do Exame</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Digite o nome do exame\"\r\n                        value={nomeExame}\r\n                        onChange={(e) => setNomeExame(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDataRealizacao\">\r\n                    <Form.Label>Data de Realização</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        value={dataRealizacao}\r\n                        onChange={(e) => setDataRealizacao(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formResultado\">\r\n                    <Form.Label>Resultado</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Digite o resultado do exame\"\r\n                        value={resultado}\r\n                        onChange={(e) => setResultado(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Cadastrar Exame\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CadastrarExame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}