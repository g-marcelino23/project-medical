{"ast":null,"code":"// src/services/medicoService.js\n\nconst API_URL = 'http://localhost:8080/medico/'; // URL da sua API\n\nexport const cadastrarMedico = async medicoData => {\n  try {\n    const response = await fetch(`${API_URL}/addMedico`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(medicoData)\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao cadastrar médico');\n    }\n    return await response.json(); // Retorna os dados do médico criado\n  } catch (error) {\n    console.error('Erro:', error);\n    throw error; // Propaga o erro para ser tratado no componente\n  }\n};\nexport const listarMedicos = async () => {\n  try {\n    const response = await fetch(`${API_URL}/getAllMedicos`);\n    if (!response.ok) {\n      throw new Error('Erro ao listar médicos');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Erro:', error);\n    throw error;\n  }\n};\n\n// Adicione outras funções conforme necessário, como atualizar ou deletar médicos","map":{"version":3,"names":["API_URL","cadastrarMedico","medicoData","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","listarMedicos"],"sources":["C:/Users/fifim/Desktop/Health/health-horizon/src/services/medicoService.js"],"sourcesContent":["// src/services/medicoService.js\r\n\r\nconst API_URL = 'http://localhost:8080/medico/'; // URL da sua API\r\n\r\nexport const cadastrarMedico = async (medicoData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/addMedico`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(medicoData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Erro ao cadastrar médico');\r\n    }\r\n\r\n    return await response.json(); // Retorna os dados do médico criado\r\n  } catch (error) {\r\n    console.error('Erro:', error);\r\n    throw error; // Propaga o erro para ser tratado no componente\r\n  }\r\n};\r\n\r\nexport const listarMedicos = async () => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/getAllMedicos`);\r\n    if (!response.ok) {\r\n      throw new Error('Erro ao listar médicos');\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Erro:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Adicione outras funções conforme necessário, como atualizar ou deletar médicos\r\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAG,+BAA+B,CAAC,CAAC;;AAEjD,OAAO,MAAMC,eAAe,GAAG,MAAOC,UAAU,IAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,YAAY,EAAE;MACnDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,UAAU;IACjC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC7B,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,gBAAgB,CAAC;IACxD,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IACA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC7B,MAAMA,KAAK;EACb;AACF,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}